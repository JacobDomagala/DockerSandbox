name: CI

on:
  push:
    branches: main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.list-targets.outputs.targets }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: List targets
        id: list-targets
        uses: docker/bake-action/subaction/list-targets@v6
        with:
          target: build-all-ci

  bake:
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.prepare.outputs.targets) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: setup-buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache ccache archive
        id: ccache-archive
        uses: actions/cache@v4
        with:
          path: ccache-archive
          key: ccache-${{ matrix.target }}-${{ github.sha }}
          restore-keys: |
            ccache-${{ matrix.target }}-

      - name: Inject ccache
        uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          builder: ${{ steps.setup-buildx.outputs.name }}
          cache-map: |
            {
              "ccache-archive": {
                "target": "/build/.ccache",
                "id": "${{ matrix.target }}"
              }
            }
          skip-extraction: ${{ steps.ccache-archive.outputs.cache-hit }}

      - name: Build
        uses: docker/bake-action@v6
        with:
          source: .
          targets: ${{ matrix.target }}
          files: docker-bake.hcl
          push: false
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            *.args.CACHE_ID=${{ matrix.target }}
